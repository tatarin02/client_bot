from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes

from db import accept_agreement, get_choice, is_agreement_accepted
from keyboards.main_menu import get_main_menu
from text_replies import USER_AGREEMENT_TEXT


# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–≥–ª–∞—à–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
async def show_user_agreement(update: Update, context: ContextTypes.DEFAULT_TYPE, show_full=True):
    if show_full:
        keyboard = [
            [InlineKeyboardButton("‚úÖ –û–∑–Ω–∞–∫–æ–º–∏–ª—Å—è", callback_data="accept_agreement")],
            [InlineKeyboardButton("üíé –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")],
            [InlineKeyboardButton("‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è", callback_data="decline_agreement")]
        ]
    else:
        keyboard = [
            [InlineKeyboardButton("‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
        ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    text = (USER_AGREEMENT_TEXT)

    if update.message:
        await update.message.reply_text(text, reply_markup=reply_markup, parse_mode="HTML")
    else:
        await update.callback_query.edit_message_text(text, reply_markup=reply_markup, parse_mode="HTML")



async def agreement_button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = update.effective_user.id

    if query.data == "accept_agreement":
        accept_agreement(user_id)
        await query.edit_message_text("‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–∏–Ω—è—Ç–∏–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è!")

        user_choice = get_choice(user_id)
        reply_markup = get_main_menu(user_choice, user_id)

        await query.message.reply_text(
            "üè† –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!",
            reply_markup=reply_markup
        )

    elif query.data == "decline_agreement":
        # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Å—Å–∏—é ‚Äî –±–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
        await query.edit_message_text(
            "‚ùå –í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç —Å–æ–≥–ª–∞—à–µ–Ω–∏—è.\n\n"
            "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ ‚Äî –≤–≤–µ–¥–∏—Ç–µ /start.",
            reply_markup=None
        )

    elif query.data == "back_to_main":
        user_id = query.from_user.id
        user_choice = get_choice(user_id)
        reply_markup = get_main_menu(user_choice, user_id)
    
        await query.message.reply_text("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=reply_markup)
    

from telegram.ext import CallbackQueryHandler

def get_agreement_handler():
    return CallbackQueryHandler(
        agreement_button_handler,
        pattern=r"^(accept_agreement|decline_agreement|back_to_main)$"
    )

async def user_agreement_text_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if not is_agreement_accepted(user_id):
        await show_user_agreement(update, context, show_full=True)
    else:
        await show_user_agreement(update, context, show_full=False)
